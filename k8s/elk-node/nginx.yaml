apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: elk
  labels:
    app: nginx
data:
  default.conf: |-
    upstream kibana {
        server kibana.elk.svc.cluster.local:5601;
        keepalive 15;
    }

    server {
      listen 8888;

      location / {
          auth_basic "Restricted Area";
          auth_basic_user_file /etc/nginx/htpasswd;

          proxy_pass http://kibana;
          proxy_redirect off;
          proxy_buffering off;
      }
    }
  htpasswd: |-
    # Login: admin, Password: qwerty123, generated by htpasswd utils
    admin:$apr1$t2XxtfDs$qugNpXJP7mmPWn8uN23D/.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: elk
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
        - name: nginx
          configMap:
            name: nginx
      containers:
        - name: nginx
          image: nginx:1.17
          ports:
            - containerPort: 8888
              protocol: TCP
          volumeMounts:
            - name: nginx
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: nginx
              mountPath: /etc/nginx/htpasswd
              subPath: htpasswd
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: elk
  labels:
    app: nginx
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  externalIPs: {%PUBLIC_IP%}
  ports:
    - port: 8888
      protocol: TCP
      targetPort: 8888
  selector:
    app: nginx
