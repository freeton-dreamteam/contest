apiVersion: v1
kind: Service
metadata:
  name: freeton-node-{%NODE_NUMBER%}-external
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  externalIPs: [{%PUBLIC_IP%}]
  ports:
    - port: 30310
      protocol: UDP
      targetPort: 30310
  selector:
    app: freeton-node-{%NODE_NUMBER%}
---
apiVersion: v1
kind: Service
metadata:
  name: freeton-node-{%NODE_NUMBER%}-internal
spec:
  type: LoadBalancer
  ports:
    - name: freeton-console
      port: 3030
      protocol: TCP
      targetPort: 3030
    - name: freeton-lite
      port: 3031
      protocol: TCP
      targetPort: 3031
  selector:
    app: freeton-node-{%NODE_NUMBER%}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: freeton-node-{%NODE_NUMBER%}-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: {%STORAGE_GI%}Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/freeton-node-{%NODE_NUMBER%}-pv-volume"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: freeton-node-{%NODE_NUMBER%}-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: freeton-node-{%NODE_NUMBER%}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: freeton-node-{%NODE_NUMBER%}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: freeton-node-{%NODE_NUMBER%}
    spec:
      nodeName: {%ASSIGN_TO%}
      initContainers:
        - name: volume-permission
          image: alpine
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: freeton-node-{%NODE_NUMBER%}-persistent-storage
              mountPath: /var/ton-work
          command:
            - sh
            - -c
            - (chmod 0770 /var/ton-work; chown -R 1000:1000 /var/ton-work)
      containers:
        - image: freetondreamteam/ton-node:0.4.13
          stdin: true
          name: freeton-node
          env:
            - name: EXTERNAL_IP
              value: '{%PUBLIC_IP%}'
            - name: TON_SRC_DIR
              value: '/home/ton/net.ton.dev/ton'
            - name: TON_BUILD_DIR
              value: '/home/ton/net.ton.dev/ton/build'
            - name: TON_WORK_DIR
              value: '/var/ton-work'
            - name: UTILS_DIR
              value: '/home/ton/net.ton.dev/ton/build/utils'
            - name: SCRIPTS_DIR
              value: '/home/ton/net.ton.dev/scripts'
            - name: KEYS_DIR
              value: '/home/ton/ton-keys'
            - name: CONFIGS_DIR
              value: '/home/ton/net.ton.dev/configs'
            - name: ADNL_PORT
              value: '30310'
            - name: HOSTNAME
              value: 'freeton-node-{%NODE_NUMBER%}'
            - name: VALIDATOR_NAME
              value: 'validator'
          ports:
            - name: freeton-console
              containerPort: 3030
            - name: freeton-lite
              containerPort: 3031
            - name: net
              containerPort: 30310
              protocol: UDP
          resources:
            limits:
              memory: {%MEMORY_GI%}Gi
              cpu: {%CPU_PCS%}
            requests:
              cpu: {%CPU_PCS%}
              memory: {%MEMORY_GI%}Gi
          volumeMounts:
            - name: freeton-node-{%NODE_NUMBER%}-persistent-storage
              mountPath: /var/ton-work
            - name: freeton-node-1-keys
              mountPath: /home/ton/ton-keys
          command:
            - bash
            - '-c'
            - |
              if [ ! -f "${TON_WORK_DIR}/etc/ton-global.config.json" ]; then
                echo "Setup TON node"
                ./setup-in-k8s.sh
              fi
              /home/ton/prepare-metrics.sh &
              echo "Hostname=${HOSTNAME}" >> /etc/zabbix/zabbix_agent2.conf
              /usr/sbin/zabbix_agent2 &
              echo "Starting TON node"
              "${TON_BUILD_DIR}/validator-engine/validator-engine" -C "${TON_WORK_DIR}/etc/ton-global.config.json" --db "${TON_WORK_DIR}/db"
      volumes:
        - name: freeton-node-{%NODE_NUMBER%}-persistent-storage
          persistentVolumeClaim:
            claimName: freeton-node-{%NODE_NUMBER%}-pv-claim
        - name: freeton-node-{%NODE_NUMBER%}-keys
          secret:
            secretName: freeton-node-{%NODE_NUMBER%}-keys
