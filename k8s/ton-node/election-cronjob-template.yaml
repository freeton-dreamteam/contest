apiVersion: v1
kind: PersistentVolume
metadata:
  name: election-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/election"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: election-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: election
spec:
  schedule: "*/10 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      parallelism: 1
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: freeton-node
              image: freetondreamteam/ton-node:0.4.13
              stdin: true
              securityContext:
                runAsUser: 0
              env:
                - name: UTILS_DIR
                  value: '/home/ton/net.ton.dev/ton/build/utils'
                - name: SCRIPTS_DIR
                  value: '/home/ton/net.ton.dev/scripts'
                - name: CONFIGS_DIR
                  value: '/home/ton/net.ton.dev/configs'
                - name: TON_BUILD_DIR
                  value: '/home/ton/net.ton.dev/ton/build'
                - name: STAKE
                  value: '{%STAKE%}'
                - name: REQ_CONFIRMS
                  value: '{%REQ_CONFIRMS%}'
                - name: VALIDATOR_NAME
                  value: 'validator'
                - name: ELECTIONS_WORK_DIR
                  value: '/var/ton/election'
                - name: TON_SRC_DIR
                  value: '/home/ton/net.ton.dev/ton'
                - name: MSIG_ADDR
                  value: '{%MSIG_ADDR%}'
              volumeMounts:
                - name: election-persistent-storage
                  mountPath: /var/ton/election{%VOLUME_MOUNTS%}
              command:
                - /bin/bash
                - '-c'
                - |
                  NODES_NUMBER=$(echo /var/ton/keys/*/ | wc -w)
                  if [ $NODES_NUMBER -lt $REQ_CONFIRMS  ]; then
                      >&2 echo "$(date) [ERROR]: NODES_NUMBER(${NODES_NUMBER}) doesn't satisfy REQ_CONFIRMS(${REQ_CONFIRMS})"
                      exit 1
                  fi

                  export INITIATOR_KEYS_DIR=$(echo /var/ton/keys/*/ | cut -d ' ' -f 1 | sed 's/.$//')
                  export INITIATOR_HOSTNAME=$(cat ${INITIATOR_KEYS_DIR}/hostname)
                  echo "$(date) [INFO]: Initiator hostname: ${INITIATOR_HOSTNAME}"
                  ./validator-msig-in-k8s.sh

                  echo "===========================";
                  echo "$(date) [INFO]: Req confirms: ${REQ_CONFIRMS}";
                  if [ $REQ_CONFIRMS -gt 1 ]; then
                      for (( i=2; i<=$REQ_CONFIRMS; i++))
                          do
                              export CONFIRMATOR_KEYS_DIR=$(echo /var/ton/keys/*/ | cut -d ' ' -f $i | sed 's/.$//')
                              export CONFIRMATOR_HOSTNAME=$(cat ${CONFIRMATOR_KEYS_DIR}/hostname)
                              echo "$(date) [INFO]: Confirmator hostname: $CONFIRMATOR_HOSTNAME"
                              ./confirmator-msig-in-k8s.sh
                      done
                  fi

                  echo "$(date) [INFO]: Finish election job"
          volumes:
            - name: election-persistent-storage
              persistentVolumeClaim:
                claimName: election-pv-claim{%VOLUMES%}
